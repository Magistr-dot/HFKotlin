(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{121:function(e){e.exports={main:{preview:"# Files for the Drum Machine\n\nYou can download the audio files for \u2026",content:"# Files for the Drum Machine\n\nYou can download the audio files for the drum machine [here](audio.zip).\n\n# What will you learn from this book?\n\nHead First Kotlin is a complete introduction to coding in Kotlin. This book helps you learn the Kotlin language with a unique method that goes beyond syntax and how-to manuals, and teaches you how to think like a great Kotlin developer. Despite its playful appearance, it's serious stuff. You'll learn everything from language fundamentals, through to collections, generics, lambdas and higher-order functions. And along the way, you'll get to play with both object-oriented and functional programming. If you want to really understand Kotlin, this is the book for you.\n\n## Why does this book look so different?\n\nBased on the latest research in cognitive science and learning theory, Head First Kotlin uses a visually rich format to engage your mind, rather than a text-heavy approach that puts you to sleep. Why waste your time struggling with new concepts? This multi-sensory learning experience is designed for the way your brain really works.\n",basename:"main"}}},122:function(e){e.exports={main:{title:"Source code",preview:"You can download the [source code from \u2026",content:"\n\nYou can download the [source code from Github](https://github.com/dogriffiths/HFKotlin).\n\nYou can download the source code in [zip](https://github.com/dogriffiths/HFKotlin/zipball/master) or [tar.gz](https://github.com/dogriffiths/HFKotlin/tarball/master) format. Or, if you have [git](http://www.git-scm.com/) installed, you can get your own copy of the  source code  repository by typing this on the command line:\n\n    $ git clone https://github.com/dogriffiths/HFKotlin.git\n    $ cd HFKotlin\n    $ ls\n",basename:"main"}}},124:function(e,t,n){e.exports=n(370)},129:function(e,t,n){},131:function(e,t,n){},215:function(e,t,n){},217:function(e,t,n){},219:function(e,t,n){},222:function(e,t,n){},25:function(e){e.exports={10:{name:10,title:"generics",subtitle:"Know your Ins from your Outs",image:"images/11148.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"10"},11:{name:11,title:"lambdas & higher-order functions",subtitle:"Treating Code like Data",image:"images/11333.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"11"},12:{name:12,title:"built-in higher-order functions",subtitle:"Power Up your Code",image:"images/11142.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"12"},13:{name:"App I",title:"testing",subtitle:"Hold your Code to Account",image:"images/11199.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"13"},14:{name:"App II",title:"leftovers",subtitle:"The Top Ten Things we didn't cover",image:"images/11287.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"14"},"01":{name:1,title:"getting started",subtitle:"A Quick Dip",image:"images/11254.jpg",preview:"## Kotlin is making waves\nFrom it\u2019s first official release, Kotlin \u2026",content:"\n## Kotlin is making waves\nFrom it\u2019s first official release, Kotlin has impressed programmers with its **friendly syntax, conciseness, flexibility and power**. In this book, we\u2019ll teach you how to **build your own Kotlin applications**, and we\u2019ll start by getting you to build a basic application and run it. Along the way, you\u2019ll meet some of Kotlin\u2019s basic syntax, such as *statements, loops and conditional branching*. Your journey has just begun...\n\n## Headings\n\n* Welcome to Kotlinville\n* You can use Kotlin nearly everywhere\n* What we\u2019ll do in this chapter\n* Sharpen your pencil (Exercise)\n* Sharpen your pencil (Solution)\n* Install IntelliJ IDEA (Community Edition)\n* Let's build a basic application\n* You've just created your first Kotlin project\n* Add a new Kotlin file to the project\n* Anatomy of the main function\n* Add the main function to App.kt\n* Test drive\n* What can you say in the main function?\n* Loop and loop and loop...\n* A loopy example\n* Conditional branching\n* Using *if* to return a value\n* Update the main function\n* Code magnets (Exercise)\n* Using the Kotlin interactive shell\n* You can add multi-line code snippets to the REPL\n* Be the Compiler (Exercise)\n* Be the Compiler (Solution)\n* Mixed Messages (Exercise)\n* Mixed Messages (Solution)\n* Code magnets (Solution)\n* Your Kotlin Toolbox\n\n",basename:"01"},"02":{name:2,title:"basic types and variables",subtitle:"Being a Variable",image:"images/11120.jpg",preview:"## There\u2019s one thing all code depends on\u2014variables \n\rSo in this \u2026",content:"\n## There\u2019s one thing all code depends on\u2014variables \n\rSo in this chapter, we\u2019re going to look under the hood, and show you how **Kotlin variables really work**. You\u2019ll discover Kotlin\u2019s **basic types**, such as *Ints*, *Floats* and *Booleans*, and learn how the Kotlin compiler can **cleverly infer a variable\u2019s type from the value it\u2019s given**. You\u2019ll find out how to use **String templates** to construct complex Strings with very little code, and you\u2019ll learn how to create **arrays** to hold multiple values. Finally, you\u2019ll discover *why objects are so important to life in Kotlinville*.\n\n## Headings\n\n* Your code needs variables\n* What happens when you declare a variable\n* The variable holds a reference to the object\n* Kotlin's basic types\n* How to explicitly declare a variable's type\n* Use the right value for the variable's type\n* Assigning a value to another variable\n* We need to convert the value\n* What happens when you convert a value\n* Watch out for the overspill\n* Sharpen your pencil (Exercise)\n* Sharpen your pencil (Solution)\n* Store multiple values in an array\n* Create the Phrase-O-Matic application\n* Add the code to App.kt\n* String Templates Up Close\n* The compiler infers the array's type from its values\n* var means the variable points to a different array\n* val means the variable points to the same array forever...\n* Be the compiler (Exercise)\n* Code Magnets (Exercise)\n* Mixed References (Exercise)\n* Be the compiler (Solution)\n* Code Magnets (Solution)\n* Mixed References (Solution)\n* Your Kotlin Toolbox\n",basename:"02"},"03":{name:3,title:"functions",subtitle:"Getting Out of Main",image:"images/11114.jpg",preview:"## It\u2019s time to take it up a notch, and learn about functions.\n\rSo \u2026",content:"\n## It\u2019s time to take it up a notch, and learn about functions.\n\rSo far, all the code you\u2019ve written has been inside your application\u2019s main function. But if you want to write code that\u2019s better organized and easier to maintain, you need to know how to split your code into separate functions. In this chapter, you\u2019ll learn how to write functions and interact with your application by building a game. You\u2019ll discover how to write compact single expression functions. Along the way you\u2019ll find out how to iterate through ranges and collections using the powerful for loop.",basename:"03"},"04":{name:4,title:"classes and objects",subtitle:"A Bit of Class",image:"images/11240.jpg",preview:"## It\u2019s time we looked beyond Kotlin\u2019s basic types \n\rSooner or \u2026",content:"\n## It\u2019s time we looked beyond Kotlin\u2019s basic types \n\rSooner or later, you\u2019re going to want to use something more than Kotlin\u2019s basic types. And that\u2019s where classes come in. Classes are templates that allow you to create your own types of objects, and define their properties and functions. Here, you\u2019ll learn how to design and define classes, and how to use them to create new types of objects. You\u2019ll meet constructors, initializer blocks, getters and setters, and you\u2019ll discover how they can be used to protect your properties. Finally, you\u2019ll learn how data hiding is built into all Kotlin code, saving you time, effort and a multitude of keystrokes.\n",basename:"04"},"05":{name:5,title:"superclasses and subclasses",subtitle:"Using your Inheritance",image:"images/11165.jpg",preview:"## Ever found yourself thinking that an object\u2019s type would be \u2026",content:"\n## Ever found yourself thinking that an object\u2019s type would be perfect if you could just change a few things?\n\rWell, that\u2019s one of the advantages of inheritance. Here, you\u2019ll learn how to create subclasses, and inherit the properties and functions of a superclass. You\u2019ll discover how to override functions and properties to make your classes behave the way you want, and you\u2019ll find out when this is (and isn\u2019t) appropriate. Finally, you\u2019ll see how inheritance helps you avoid duplicate code, and how to improve your flexibility with polymorphism.\n",basename:"05"},"06":{name:6,title:"abstract classes and interfaces",subtitle:"Serious Polymorphism",image:"images/11131.jpg",preview:"## A superclass inheritance hierarchy is just the beginning \n\rIf you \u2026",content:"\n## A superclass inheritance hierarchy is just the beginning \n\rIf you want to fully exploit polymorphism, you need to design using abstract classes and interfaces. In this chapter, you\u2019ll discover how to use abstract classes to control which classes in your hierarchy can and can\u2019t be instantiated. You\u2019ll see how they can force concrete subclasses to provide their own implementations. You\u2019ll find out how to use interfaces to share behavior between independent classes. And along the way, you\u2019ll learn the ins and outs of is, as and when.\n",basename:"06"},"07":{name:7,title:"data classes",subtitle:"Dealing with Data",image:"images/53212.jpg",preview:"## Nobody wants to spend their life reinventing the wheel\n \rMost \u2026",content:"\n## Nobody wants to spend their life reinventing the wheel\n \rMost applications include classes whose main purpose is to store data, so to make your coding life easier, the Kotlin developers came up with the concept of a data class. Here, you\u2019ll learn how data classes enable you to write code that\u2019s cleaner and more concise than you ever dreamed was possible. You\u2019ll explore the data class utility functions, and discover how to destructure a data object into its component parts. Along the way, you\u2019ll find out how default parameter values can make your code more flexible, and we\u2019ll introduce you to Any, the mother of all superclasses.\n",basename:"07"},"08":{name:8,title:"nulls and exceptions",subtitle:"Safe and Sound",image:"images/11077.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"08"},"09":{name:9,title:"collections",subtitle:"Get Organized",image:"images/11004.jpg",preview:"Some content goes here",content:"\nSome content goes here\n",basename:"09"}}},352:function(e,t,n){},354:function(e,t,n){},356:function(e,t,n){},358:function(e,t,n){},360:function(e,t,n){},362:function(e,t,n){},364:function(e,t,n){},366:function(e,t,n){},368:function(e,t,n){},370:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),i=n(24),r=n.n(i),s=(n(129),n(3)),l=n(4),c=n(6),u=n(5),h=n(7),m=n(376),p=n(375),d=n(377),f=n(33),g=n(120),b=n(110),y=n.n(b),w=n(111),v=n.n(w),k=n(73),j=n.n(k),E=n(112),O=n.n(E),S=n(113),x=n.n(S),C=n(107),K=n.n(C),I=n(114),T=n.n(I),A=n(41),N=n.n(A),F=n(115),M=n.n(F),H=n(40),Y=n.n(H),D=n(42),B=n.n(D),W=n(119),R=n.n(W),L=n(116),U=n.n(L),J=n(117),P=n.n(J),z=n(118),G=n.n(z),V=n(109),q=n.n(V),$=n(36),_=(n(131),n(374)),Q=n(55),X=n.n(Q),Z=n(37),ee=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement("div",Object.assign({style:Object(Z.a)({width:this.props.width,height:this.props.height,position:"relative"},this.props.style)},this.props),o.a.createElement("div",{style:{position:"absolute",top:0,left:0,bottom:0,right:0,backgroundImage:"url(".concat(this.props.src,")"),backgroundSize:"cover",backgroundRepeat:"no-repeat",backgroundPosition:"50% 50%",backgroundClip:"border-box",borderRadius:this.props.style&&this.props.style.borderRadius}}))}}]),t}(a.Component),te=n(38),ne=n.n(te),ae=(n(215),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){var e=this.props.article,t=e.content.split(" ").length,n=Math.round(t/250)+1;this.setState({article:e,wordCount:t,minuteRead:n})}},{key:"render",value:function(){var e=this.state,t=e.article,n=e.minuteRead;return t?o.a.createElement("div",{className:"ArticleFooter"},t&&t.tags&&o.a.createElement("div",{className:"ArticleFooter-tags"},t.tags.map(function(e){return o.a.createElement("div",{className:"ArticleFooter-tag"},e)})),t.date&&o.a.createElement("div",{className:"ArticleFooter-text"},t.author&&o.a.createElement("div",null,"Posted by ",t.author,","),ne()(t.date).format("MMMM Do YYYY"),".",o.a.createElement("br",null),n," min read")):o.a.createElement("div",null)}}]),t}(a.Component)),oe=(n(217),function(e){function t(e){var n;Object(s.a)(this,t),n=Object(c.a)(this,Object(u.a)(t).call(this,e));var a=e.article,o=a.content.split(" ").length,i=Math.round(o/250)+1;return n.state={article:a,wordCount:o,minuteRead:i},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"componentDidUpdate",value:function(e){if(e.article!==this.props.article){var t=this.props.article,n=t.content.split(" ").length,a=Math.round(n/250)+1;this.setState({article:t,wordCount:n,minuteRead:a})}}},{key:"render",value:function(){var e=this.state.article;return o.a.createElement("div",{className:"ArticlePreview"},o.a.createElement("div",{className:"ArticlePreview-title"},o.a.createElement(_.a,{to:"/".concat(e.category,"/").concat(e.id)},e.title)),o.a.createElement(X.a,{source:e.preview,className:"ArticlePreview-text"}),o.a.createElement("div",{className:"ArticlePreview-footer"},o.a.createElement(ae,{article:e})))}}]),t}(a.Component)),ie=(n(219),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){this.setState({articles:this.props.articles})}},{key:"componentDidUpdate",value:function(e){e.articles&&e.articles.length!==this.props.articles.length&&this.setState({articles:this.props.articles})}},{key:"render",value:function(){return o.a.createElement("div",{className:"articles"},this.state.articles&&this.state.articles.map(function(e){return o.a.createElement(oe,{article:e})}))}}]),t}(a.Component)),re=n(39),se=n(25),le=Object.keys(re).map(function(e){return Object(Z.a)({id:e,category:"blogs"},re[e])}).filter(function(e){return ne()(e.date).utc()<ne()().utc()}).sort(function(e,t){return e.date===t.date?0:e.date<t.date?1:-1}),ce=Object.keys(se).map(function(e){return Object(Z.a)({id:e,category:"chapters"},se[e])}),ue=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){this.setState({terms:this.props.terms})}},{key:"componentDidUpdate",value:function(e){e.terms!=this.props.terms&&this.setState({terms:this.props.terms})}},{key:"render",value:function(){var e=this.state.terms,t=e?e.toUpperCase():null,n=e?le.filter(function(e){return-1!==e.title.toUpperCase().indexOf(t)||-1!==e.content.toUpperCase().indexOf(t)}):[],a=e?ce.filter(function(e){return-1!==e.title.toUpperCase().indexOf(t)||-1!==e.content.toUpperCase().indexOf(t)}):[],i=n.concat(a);return o.a.createElement(ie,{articles:i})}}]),t}(a.Component),he=Object(d.a)(ue),me=(n(222),function(e){return o.a.createElement("div",{className:"Content-container"},o.a.createElement("div",{className:"Content-inner"},e.children))}),pe=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={open:!1},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){document.title=this.props.title,this.setState({terms:null})}},{key:"componentDidUpdate",value:function(e){e.location.pathname!==this.props.location.pathname&&this.setState({terms:null})}},{key:"render",value:function(){var e=this,t=this.props.classes,n=o.a.createElement("div",{className:"".concat(t.search," SearchField")},o.a.createElement("div",{className:t.searchIcon},o.a.createElement(K.a,null)),o.a.createElement(q.a,{placeholder:"Search\u2026",classes:{root:t.inputRoot,input:t.inputInput},onChange:function(t){var n=t.target.value;e.setState({terms:n})}}));return o.a.createElement("div",null,o.a.createElement(y.a,{className:"appBar",position:"fixed",style:{backgroundColor:"rgb(56, 40, 129)",color:"white"}},o.a.createElement(v.a,null,o.a.createElement(O.a,{className:"".concat(this.props.classes.menuButton," appBar-menu"),color:"inherit","aria-label":"Menu",onClick:function(){return e.setState({open:!0})}},o.a.createElement(x.a,null)),o.a.createElement(j.a,{variant:"h6",color:"inherit",className:this.props.classes.grow},this.props.title),o.a.createElement("div",{className:t.grow}),n)),o.a.createElement(T.a,{docked:!1,width:250,open:this.state.open,onClose:function(){return e.setState({open:!1})},className:"AppBarAndMenu-drawer"},o.a.createElement("div",{tabIndex:0,role:"button",onClick:function(){return e.setState({open:!1})},onKeyDown:function(){return e.setState({open:!1})}},o.a.createElement("div",{className:this.props.classes.fullList},o.a.createElement(M.a,null,o.a.createElement(Y.a,{button:!0,onClick:function(){return e.setState({open:!1},function(){e.props.history.push("/")})}},o.a.createElement(N.a,null,o.a.createElement(U.a,null)),o.a.createElement(B.a,{primary:"Head First Kotlin"})),o.a.createElement(Y.a,{button:!0,onClick:function(){return e.setState({open:!1},function(){e.props.history.push("/tableOfContents")})}},o.a.createElement(N.a,null,o.a.createElement(P.a,null)),o.a.createElement(B.a,{primary:"Table of contents"})),o.a.createElement(Y.a,{button:!0,onClick:function(){return e.setState({open:!1},function(){e.props.history.push("/blogs")})}},o.a.createElement(N.a,null,o.a.createElement(G.a,null)),o.a.createElement(B.a,{primary:"Blog"})),o.a.createElement(Y.a,{button:!0,onClick:function(){return e.setState({open:!1},function(){e.props.history.push("/sourceCode")})}},o.a.createElement(N.a,null,o.a.createElement(R.a,null)),o.a.createElement(B.a,{primary:"Source code"})))))),this.state.terms&&this.state.terms.length>0?o.a.createElement(me,null,o.a.createElement(he,{terms:this.state.terms})):this.props.children)}}]),t}(a.Component),de=Object(d.a)(Object(g.withStyles)(function(e){return{root:{width:"100%"},grow:{flexGrow:1},menuButton:{marginLeft:-12,marginRight:20},title:Object(f.a)({display:"none"},e.breakpoints.up("sm"),{display:"block"}),search:Object(f.a)({position:"relative",borderRadius:e.shape.borderRadius,backgroundColor:Object($.fade)(e.palette.common.white,.15),"&:hover":{backgroundColor:Object($.fade)(e.palette.common.white,.25)},marginLeft:0,height:"32px",width:"100%"},e.breakpoints.up("sm"),{marginLeft:e.spacing.unit,width:"auto"}),searchIcon:{width:9*e.spacing.unit,height:"100%",position:"absolute",pointerEvents:"none",display:"flex",alignItems:"center",justifyContent:"center"},inputRoot:{color:"inherit",width:"100%"},inputInput:Object(f.a)({paddingTop:e.spacing.unit,paddingRight:e.spacing.unit,paddingBottom:e.spacing.unit,paddingLeft:10*e.spacing.unit,transition:e.transitions.create("width"),width:"100%"},e.breakpoints.up("sm"),{width:120,"&:focus":{width:200}})}})(pe)),fe=n(121),ge=(n(352),function(e){function t(e){var n;Object(s.a)(this,t),n=Object(c.a)(this,Object(u.a)(t).call(this,e));var a=e.article,o=a.content.split(" ").length,i=Math.round(o/250)+1;return n.state={article:a,wordCount:o,minuteRead:i},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.state.article;return o.a.createElement("div",{className:"Article-content"},this.props.children,e.image&&o.a.createElement("div",{className:"Article-imageContainer"},o.a.createElement(ee,{src:e.image,className:"Article-image"})),e.subtitle&&o.a.createElement("h1",{className:"subtitle"},e.subtitle),o.a.createElement(X.a,{source:e.content}),o.a.createElement(ae,{article:e}))}}]),t}(a.Component)),be=Object(d.a)(ge),ye=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("a",{className:"twitter-timeline",href:"https://twitter.com/HeadFirstKotlin?ref_src=twsrc%5Etfw"},"Tweets by HeadFirstKotlin"))}}]),t}(a.Component),we=(n(354),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={articles:le.slice(0,3)},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(de,{title:"Head First Kotlin"},o.a.createElement(me,null,o.a.createElement("div",{className:"Home-main"},o.a.createElement(be,{article:fe.main}),o.a.createElement("section",{className:"Home-recent"},o.a.createElement("h2",null,"Recent posts"),o.a.createElement(ie,{articles:this.state.articles}))),o.a.createElement("div",{className:"Home-other"},o.a.createElement(ye,null)))))}}]),t}(a.Component)),ve=Object(d.a)(we),ke=(n(356),n(358),function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this,t=this.props.name;return o.a.createElement("li",{className:"ImageItem-container"},o.a.createElement("div",{className:"ImageItem-photo ".concat(this.props.disabled&&"ImageItem-photo-disabled"),onClick:function(){return e.props.onClick(e.props.id)}},o.a.createElement(ee,{alt:t,src:this.props.src,className:"cover-image"})),o.a.createElement("div",{className:"ImageItem-details"},o.a.createElement("div",{className:"ImageItem-info",onClick:function(){return e.props.onClick(e.props.id)}},o.a.createElement("div",{className:"ImageItem-name"},t),this.props.description&&o.a.createElement("div",{className:"ImageItem-description"},this.props.description),null==this.props.description||o.a.createElement("div",{className:"ImageItem-description"},"\xa0"))))}}]),t}(a.Component)),je=(n(360),function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this;return o.a.createElement("div",null,o.a.createElement(de,{title:"Table of contents"},o.a.createElement("section",{className:"tableOfContents"},Object.keys(se).sort().map(function(t){var n=se[t];return o.a.createElement(ke,{id:t,src:n.image,name:o.a.createElement("div",null,o.a.createElement("div",{className:"chapter-number",style:{float:"left",marginRight:"1ex"}},n.name," "),o.a.createElement("div",{className:"chapter-title"},n.title)),description:n.subtitle,onClick:function(t){return e.props.history.push("/chapters/".concat(t))}})}))))}}]),t}(a.Component)),Ee=Object(d.a)(je),Oe=n(122),Se=(n(362),function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(de,{title:"Source code"},o.a.createElement(me,null,o.a.createElement(be,{article:Oe.main}))))}}]),t}(a.Component)),xe=Object(d.a)(Se),Ce=(n(364),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={articles:le},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(de,{title:"Blog"},o.a.createElement(me,null,o.a.createElement(ie,{articles:this.state.articles}))))}}]),t}(a.Component)),Ke=(n(366),function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props.match.params.blogId,t=re[e];return o.a.createElement("div",null,o.a.createElement(de,{title:t.title},o.a.createElement(me,null,o.a.createElement(be,{article:t},o.a.createElement(_.a,{to:"/blogs",className:"returnToBlogs"},"Back to blogs")))))}}]),t}(a.Component)),Ie=(n(368),function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props.match.params.chapterId,t=se[e];return o.a.createElement("div",null,o.a.createElement(de,{title:t.title},o.a.createElement(me,null,o.a.createElement(be,{article:t},o.a.createElement(_.a,{to:"/tableOfContents"},"Back to table of contents")))))}}]),t}(a.Component)),Te=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return o.a.createElement(m.a,null,o.a.createElement("div",null,o.a.createElement("div",null,o.a.createElement(p.a,{exact:!0,path:"/",component:ve}),o.a.createElement(p.a,{exact:!0,path:"/tableOfContents",component:Ee}),o.a.createElement(p.a,{parameter:"chapterId",path:"/chapters/:chapterId",component:Ie}),o.a.createElement(p.a,{exact:!0,path:"/sourceCode",component:xe}),o.a.createElement(p.a,{exact:!0,path:"/blogs",component:Ce}),o.a.createElement(p.a,{parameter:"blogId",path:"/blogs/:blogId",component:Ke}),o.a.createElement(p.a,{exact:!0,path:"/search",component:he}),o.a.createElement(p.a,{parameter:"terms",path:"/search/:terms",component:he}))))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(Te,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},39:function(e){e.exports={"2019YearAhead":{title:"The year ahead for Kotlin",author:"Head First Labs",image:"images/11254.jpg",date:"2018-12-01 13:06",tags:["Predictions",2019],preview:"2019 will be the year of Kotlin 1.3. For developers who have been \u2026",content:"\n\n2019 will be the year of Kotlin 1.3. For developers who have been tentatively looking at Kotlin, the introduction of 1.3 means it's the perfect time to jump in with both feet. \n\nWhat are the key features of 1.3? \n\nCo-routines are no longer experimental. They are like lightweight threads which allow code to scale-out efficiently. Scaling always used to be a usability problem; the worse your app was at scaling, the worse the experience was for the users. The cloud has changed all that. Now scalability is a financial problem. The better your app is at scaling, the lower your running costs. \n\n2018 saw much activity in making traditional enterprise Java frameworks--like Spring Boot--more Kotlin-friendly However, newer frameworks like [Ktor](https://github.com/ktorio/ktor) are breathing new life into the server-side. Kotlin co-routines are at the heart of Ktor, alongside an application model that is similar to the Node.js Express library. \n\n2019 is also the year when Kotlin is likely to see significant use beyond the Java world. Multi-platform builds allow you to compile the same code for the JVM, for JavaScript and (using the beta version of Kotlin/Native) for iOS, Linux, Mac, Windows, and WebAssembly. While possible, it's unlikely that many people will choose to build client-side apps entirely in Kotlin. JavaScript would appear to have an increasingly indomitable position in the browser. However, Kotlin is proving itself to be an excellent language for library-builders. The same code can build a library for Java, JavaScript, C, and Swift. \n\nIf you are, for example, a bank  that performs some complex financial calculation on the server. Kotlin allows you to convert that server-code into a Kotlin library which can run on both the server (where processing cycles are expensive) and on the client (where processing cycles are free). Multi-platform builds can improve the experience for your users, and also take some of the load off your server.\n\nFinally, looking beyond Kotlin 1.3, 2019 is also the year when the language is likely to acquire features to catch bugs at compile time. Keep a lookout for features that reduce/eliminate shared mutable state in concurrent code, and also for first-class immutability support in the language. \n\nArchitects and tech leads should start to pay very serious attention to Kotlin in the year ahead.",iso8601Date:"2018-12-01T13:06:00+00:00",basename:"2019YearAhead"},Another:{title:"Merry Christmas",author:"David Griffiths",date:"2018-12-25 13:06",tags:["Example"],preview:"Ding-dong merrily on high....",content:"\nDing-dong merrily on high....\n\n",iso8601Date:"2018-12-25T13:06:00+00:00",basename:"Another"},LinksOfTheWeek:{title:"Links of the week Nov 3rd, 2018",author:"David Griffiths",date:"2018-11-03 11:11",tags:["Example"],preview:"Here are the most interesting Kotlin articles we've found  this \u2026",content:"\nHere are the most interesting Kotlin articles we've found  this week:\n\n## Kotlin Native released in Beta\n\nKotlin Native is Kotlin's pathway to non-Java platforms like iOS. Kotlin Native works by compiling Kotlin code down to a format supported by the LLVM (Low-Level Virtual Machine). The LLVM compiler framework can then compiled that code to native code for pretty much any platform.\n\nHere's the [announcement](https://blog.jetbrains.com/kotlin/2018/08/kotlin-native-0-8-2/#comments)\n\n## 7 things any Java developer should know\n\n[A nice intro](https://medium.com/digitalfrontiers/7-things-any-java-developer-should-know-when-starting-with-kotlin-6062d12aa902) for Java developers converting over to Kotlin.\n\nAnd of course the big one...\n\n## Kotlin 1.3 released\n\nSee the announcement [here](https://blog.jetbrains.com/kotlin/2018/10/kotlin-1-3/)",iso8601Date:"2018-11-03T11:11:00+00:00",basename:"LinksOfTheWeek"},learningTips:{title:"10 Ways to Boost Your Learning Power",author:"Head First Labs",image:"images/brainRules.jpg",date:"2018-11-12 13:06",tags:["Learning","Hacks"],preview:"The tips below are adapted from the rules in John Medina\u2019s excellent \u2026",content:"\n\nThe tips below are adapted from the rules in John Medina\u2019s excellent book [Brain Rules](http://www.amazon.com/Brain-Rules-Updated-Expanded-Principles/dp/098326337X/ref=sr_1_1?ie=UTF8&qid=1409579494&sr=8-1&keywords=brain+rules). We use them extensively when writing Head First books. They\u2019ve helped us and we think they\u2019ll help you too.\n\n# 1 Study around people you like and trust\nHuman beings evolved as social creatures. We could hunt stronger animals like mammoths only by working in groups and being social. So our brains work best when we are in a group that makes us feel safe and supported. Head First books are populated with characters that you will come to know and feel safe with. They will express the same kinds of thoughts and feelings that you might be thinking and feeling.\n\nWhen you\u2019re learning a new subject do it in the company of people you feel safe with. Who know and understand you.\n\n# 2 Exercise regularly\nYou probably think that your brain runs on coffee\u200a\u2014\u200abut it doesn\u2019t. Your brain runs on oxygen. And the best way of getting oxygen in to your brain is by exercise. Exercise will also reduce the free radicals that flow through your brain. Free radicals can cause memory loss and other stuff, like strokes, heart attacks and wrinkles.\n\nTo make sure you keep learning, keep exercising. You will learn more, remember more and live longer.\n\n# 3 Get plenty of sleep\nWorking longer doesn\u2019t mean that you\u2019re working better. It might feel like slugging through a topic until 3 in the morning is productive, but it isn\u2019t. When you\u2019re learning something new, try to learn small amounts and then sleep on them. That\u2019s why our chapters are just long enough for a single learning session. Do one chapter a day, then have a good night\u2019s sleep to consolidate the learning.\n\nIf you\u2019re feeling tired, take a nap. A 20 minute nap will refresh you as much as a cup of coffee. If you can, take a nap in the early afternoon. Churchill used to and he said that he got twice as much done because\n\nYou get two days in one\u200a\u2014\u200awell, at least one and a half.\n\n# 4 Avoid stress\nStress is bad for your brain in many ways. First of all, stress has a physical effect on your entire body, not just your brain. The chemicals released as a result of stress create small pits in your artery walls. These will trap passing fats which can cause heart attacks. Stress also ruins concentration. A huge amount of your brain is busy thinking about the stress and it won\u2019t be learning what you want it to.\n\nPrioritize. Simplify. Take time off and don\u2019t spend too long online.\n\n# 5 Don\u2019t multi-task\nYour brain can\u2019t multi-task. It doesn\u2019t matter if you\u2019re a man, or a woman\u200a\u2014\u200ayour brain can\u2019t do it. Sure, you can walk and chew gum at the same time, but that\u2019s just your cerebellum: the mini-brain seated just below your real brain. The higher brain can only do one thing at a time. The only way it can appear to do several things at once is by task-switching. Task switching sucked for operating systems and it sucks for thinking.\n\nDon\u2019t read a book and Twitter at the same time. Get a Kindle. Kindle\u2019s are terrible at connecting to the \u2018net, so they\u2019re great devices for reading on. Don\u2019t study while watching videos.\n\n# 6 Repeat. Repeat. R\xe9p\xe8te.\nDon\u2019t be afraid to repeat things. We repeat many things in Head First books. And that\u2019s a good thing. Repetition is one of the most powerful learning techniques. Try to repeat an idea in different and complex ways. If you want to learn someone\u2019s name, repeat the sound of the name. Then think about the order of the letters in the name. Then think about other ways the name might have been spelled. Think about what other things sound like that name.\n\nThe more you repeat, and the more complex the repetitions, the more likely you are to remember. We repeat many things in Head First books. But we already said that.\n\n# 7 Stimulate as many senses as you can\nYour senses work together to help you understand your environment. Our brains make strong associations between different sensory stimuli. When we were hunter-gatherers we used sight, sound, smell and touch to take in as much information as we could. Now we stare at page of text and wonder why we can\u2019t remember it. Try to learn in a rich environment. When you\u2019re making notes, use colors.\n\nIf you learn a programming topic when you can smell coffee, you will remember 10\u201350% more of that topic if you try to recall it when you can smell coffee.\n\n# 8 Work visually\u200a\u2014\u200ayour most powerful learning sense\nRead some information and three days later you might remember 10% of it. If it has a picture with it, then three days later you\u2019ll remember 65% of it. Your brain is looking out for tigers. It\u2019s not looking out for Beware of the tiger signs. We use pictures a lot in Head First books. If you just look at the pictures in a Head First chapter you should still have a pretty good idea of what\u2019s being taught.\n\nVisualizing things is a great way of understanding a topic. If the thing you\u2019re trying to learn has no pictures, try adding your own. If it\u2019s a paper book, doodle in the margins.\n\nLearn to mind map.\n\n# 9 Listen to music\nYour high-level brain can\u2019t do more than one thing at once. But if you listen to music at the same time as working, you can concentrate more. The fact that parrot\u2019s like to dance suggests that a lot of music listening is actually done by the low-level parts of your brain. No one\u2019s really sure. But if you want to concentrate, plug yourself in to music that you know well and like. It may just be enough to keep your lower brain functions busy and let you sneak some learning past them.\n\nLearning to play a musical instrument also appears to stimulate brain power. Brilliant minds love to play musical instruments. Donald Knuth and Alan Kay play pipe organs. Richard Feynman played the bongos.\n\n# 10 Experiment to find out what works for you\nAll brains are wired differently. That\u2019s not a metaphor. Scientists have discovered by using probes to stimulate points in volunteers\u2019 brains that every single brain is wired differently. Different things stimulate different people in different ways. Make a note of which learning techniques work best for you. Find a place that is the most productive place for you to work. It might be a library. It might be a laundromat.\n\nDon\u2019t be afraid to be different.\n\n",iso8601Date:"2018-11-12T13:06:00+00:00",basename:"learningTips"}}}},[[124,2,1]]]);
//# sourceMappingURL=main.a77eab04.chunk.js.map