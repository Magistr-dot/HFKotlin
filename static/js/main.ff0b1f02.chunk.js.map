{"version":3,"sources":["components/AppBarAndMenu/AppBarAndMenu.js","containers/HomePage/HomePage.js","containers/TableOfContentsPage/TableOfContentsPage.js","App.js","serviceWorker.js","index.js"],"names":["AppBarAndMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","document","title","_this2","react_default","a","createElement","AppBar_default","className","position","Toolbar_default","IconButton_default","concat","classes","menuButton","color","aria-label","onClick","setState","Menu_default","Typography_default","variant","grow","Drawer_default","docked","width","onClose","tabIndex","role","onKeyDown","fullList","List_default","ListItem_default","button","history","push","ListItemText_default","primary","Component","withRouter","withStyles","root","flexGrow","marginLeft","marginRight","HomePage","components_AppBarAndMenu_AppBarAndMenu","TableOfContentsPage","App","HashRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff0b1f02.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {withRouter} from 'react-router-dom'\n\nimport './AppBarAndMenu.css';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nclass AppBarAndMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        }\n    }\n\n    componentDidMount() {\n        document.title = this.props.title;\n    }\n\n    render() {\n        return <div><AppBar className='appBar' position=\"static\">\n            <Toolbar>\n                <IconButton\n                    className={`${this.props.classes.menuButton} appBar-menu`}\n                    color=\"inherit\"\n                    aria-label=\"Menu\"\n                    onClick={() => this.setState({open: true})}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" className={this.props.classes.grow}>\n                    {this.props.title}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n            <Drawer\n                docked={false}\n                width={250}\n                open={this.state.open}\n                onClose={() => this.setState({open: false})}\n                className='AppBarAndMenu-drawer'\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onClick={() => this.setState({open: false})}\n                    onKeyDown={() => this.setState({open: false})}\n                >\n                    <div className={this.props.classes.fullList}>\n                        <List>\n                            <ListItem\n                                button\n                                onClick={() => this.setState({open: false}, () => {\n                                    this.props.history.push('/')\n                                })}\n                            >\n                                <ListItemText primary='Head First Kotlin'/>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() => this.setState({open: false}, () => {\n                                    this.props.history.push('/tableOfContents')\n                                })}\n                            >\n                                <ListItemText primary='Table of contents'/>\n                            </ListItem>\n                        </List>\n                    </div>\n                </div>\n            </Drawer>\n        </div>;\n    }\n}\n\nexport default withRouter(withStyles(styles)(AppBarAndMenu));","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom'\n\nimport './HomePage.css';\nimport AppBarAndMenu from \"../../components/AppBarAndMenu/AppBarAndMenu\";\n\nclass HomePage extends Component {\n    render() {\n        return <div>\n            <AppBarAndMenu title='Head First Kotlin'/>\n            <h1>Head First Kotlin</h1>\n            <section className='welcome'>\n                Welcome\n            </section>\n        </div>;\n    }\n}\n\nexport default withRouter(HomePage);","import React, {Component} from 'react';\n\nimport './TableOfContentsPage.css';\nimport AppBarAndMenu from \"../../components/AppBarAndMenu/AppBarAndMenu\";\n\nclass TableOfContentsPage extends Component {\n    render() {\n        return <div>\n            <AppBarAndMenu title='Table of contents'/>\n            <h1>Table of contents</h1>\n            <table className='tableOfContents'>\n                <tr>\n                    <th> Number</th>\n                    <th> Title</th>\n                    <th> Subtitle</th>\n                </tr>\n                <tr>\n                    <td> 1</td>\n                    <td> Getting started</td>\n                    <td> A Quick Dip</td>\n                </tr>\n                <tr>\n                    <td> 2</td>\n                    <td> Basic types and variables</td>\n                    <td> Being a Variable</td>\n                </tr>\n                <tr>\n                    <td> 3</td>\n                    <td> Functions</td>\n                    <td> Getting Out of Main</td>\n                </tr>\n                <tr>\n                    <td> 4</td>\n                    <td> Classes and objects</td>\n                    <td> A Bit of Class</td>\n                </tr>\n                <tr>\n                    <td> 5</td>\n                    <td> Subclasses and superclasses</td>\n                    <td> Using Your Inheritance</td>\n                </tr>\n                <tr>\n                    <td> 6</td>\n                    <td> Abstract classes and interfaces</td>\n                    <td> Serious Polymorphism</td>\n                </tr>\n                <tr>\n                    <td> 7</td>\n                    <td> Data classes</td>\n                    <td> Dealing with Data</td>\n                </tr>\n            </table>\n        </div>;\n    }\n}\n\nexport default TableOfContentsPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\n\nimport HomePage from \"./containers/HomePage/HomePage\";\n\nimport './App.css';\nimport TableOfContentsPage from \"./containers/TableOfContentsPage/TableOfContentsPage\";\n\nclass App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <div>\n                    <div>\n                        <Route exact path=\"/\" component={HomePage}/>\n                        <Route exact path=\"/tableOfContents\" component={TableOfContentsPage}/>\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}